" === General 
syntax on
set smartindent
set tabstop=4
set shiftwidth=4
set expandtab
set noeb vb t_vb=
set encoding=utf-8
set autochdir
set hlsearch
set gcr=a:block-blinkon0
set directory=$HOME/.vim/swap-files//

" === font
set guifont=CosmicSansNeueMono:h12

" === general GUI settings
" colorscheme torte
colorscheme Tomorrow-Night-Bright
set shortmess+=I
" set cursorline
set guioptions-=T
set guioptions-=m
set clipboard=unnamed
if has("gui_running")
    " Maximize gvim window.
    set lines=9999 columns=9999
endif

if has("gui_running")
    colorscheme Tomorrow-Night-Bright
else
    colorscheme twilight256
endif

" Status bar
set laststatus=2
set statusline=%F%m%r%h%w\ [FORMAT=%{&ff}]\ [TYPE=%Y]\ [ASCII=\%03.3b]\ 
                \[HEX=\%02.2B]\ [POS=%04l,%04v][%p%%]\ [LEN=%L]

" NERDTree 
let NERDTreeShowBookmarks=1
let NERDTreeChDirMode=2
let NERDTreeDirArrows=0
nnoremap <leader>n :NERDTreeToggle .<CR>

" === For MS Windows
if (has("win32"))
    " VimTweak for windows
    command -nargs=1 SetAlpha call libcallnr("vimtweak.dll", "SetAlpha", <args>)
    command -nargs=0 TopMost call libcallnr("vimtweak.dll", "EnableTopMost", 1)
    command -nargs=0 NoTopMost call libcallnr("vimtweak.dll","EnableTopMost", 0)

    au GUIEnter * simalt ~x "x on an English Windows version. n on a French one
    nmap <F4> :SetAlpha 200 <CR>
    nmap <C-F4> :SetAlpha 250 <CR>
    nmap <F5> :TopMost <CR>
    nmap <C-F5> :NoTopMost <CR>
endif

" === For Unix
if (has("unix"))
    let s:uname = system("uname")
    if s:uname == "Darwin\n"
        " For OSX
        map <F2> :.w !pbcopy<CR><CR>
        map <F3> :r !pbpaste<CR>
    endif 
endif

" === DEV
execute pathogen#infect()
set foldmethod=manual
set foldlevel=99
filetype plugin on
set tags=tags;
let Tlist_Exit_OnlyWindow = 1
let Tlist_Use_Right_Window = 1
let Tlist_One_File = 1
let g:syntastic_mode_map = { 'mode': 'active',
                    \ 'passive_filetypes': [ 'python' ] }
let g:syntastic_auto_loc_list = 1
let g:notes_directories = [ "$HOME/.vim/notes-dat"]
let g:indentLine_noConcealCursor = 1
let g:indentLine_enabled = 0

" 80+ overlength
" highlight OverLength ctermbg=red ctermfg=white guibg=#592929
" match OverLength /\%81v.\+/

" file types
au BufRead,BufNewFile *.json set filetype=json

" === wiki
let g:vimwiki_use_mouse = 1
let g:vimwiki_table_auto_fmt = 0
let g:vimwiki_valid_html_tags = 
        \ 'b,i,s,u,sub,sup,kbd,br,hr,div,center,strong,em,img'

let g:vimwiki_list = [
        \ {'path':'$HOME/.datum/wiki/note',
        \  'path_html':'$HOME/.datum/wiki/_dist_note',
        \  'template_path': '$HOME/.datum/wiki/_template',
        \  'template_default': 'vimwiki',
        \  'template_ext': '.tpl',
        \  'auto_export':0},
        \ {'path':'$HOME/datum/github/recycle.bin/_content',
        \  'path_html':'$HOME/datum/github/recycle.bin/output',
        \  'template_path': '$HOME/datum/github/recycle.bin/_config/',
        \  'template_default': 'vimwiki',
        \  'template_ext': '.tpl',
        \  'auto_export':0},
        \ {'path':'$HOME/.datum/wiki/wrk',
        \  'path_html':'$HOME/.datum/wiki/_dist_wrk',
        \  'template_path': '$HOME/.datum/wiki/_template',
        \  'template_default': 'vimwiki',
        \  'template_ext': '.tpl',
        \  'auto_export':0}
        \ ]

" === twitvim
let twitvim_proxy = $TWVIM_PROXY
let twitvim_count = 50
let twitvim_force_ssl = 1

" === key map 
vnoremap <C-r> "hy:%s/<C-r>h//gc<left><left><left>
map <silent> <C-F2> :if &guioptions =~# 'T' <Bar>
        \set guioptions-=T <Bar>
        \set guioptions-=m <Bar>
    \else <Bar>
        \set guioptions+=T <Bar>
        \set guioptions+=m <Bar>
    \endif<CR>

" === session manager
let g:session_autosave = 'no'
let g:session_autoload = 'no'

" === misc
function! s:UpdateHelpTag()
    " call pathogen#runtime_append_all_bundles()
    call pathogen#helptags()
endfunction
command -nargs=0 UpdateHelpTag call s:UpdateHelpTag()


